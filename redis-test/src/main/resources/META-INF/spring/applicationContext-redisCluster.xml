<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="  
      http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
      http://www.springframework.org/schema/tx  
      http://www.springframework.org/schema/tx/spring-tx-4.2.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-4.2.xsd
      http://www.springframework.org/schema/cache   
      http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">

	<description>Jedis Cluster Configuration</description>
	<!-- 加载配置属性文件 按需加载 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:redis.properties" />
	
	<bean id="redisNodes" class="com.ucloudlink.redis.common.RedisNodesConfigFactory">
		<property name="nodes" value="${redis.cluster.nodes}"/>
	</bean>
	
	<!-- 配置Cluster -->
	<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="maxRedirects" value="${redis.cluster.maxRedirects}"></property>
		<!-- 节点配置 -->
		<property name="clusterNodes">
			<bean ref="redisNodes"/>  
			<!-- 替换为由自己写的工厂类加载Set配置
			<set>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.75.29"></constructor-arg>
					<constructor-arg name="port" value="7001"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.75.29"></constructor-arg>
					<constructor-arg name="port" value="7002"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.75.29"></constructor-arg>
					<constructor-arg name="port" value="7003"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.75.29"></constructor-arg>
					<constructor-arg name="port" value="7004"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.75.29"></constructor-arg>
					<constructor-arg name="port" value="7005"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.75.29"></constructor-arg>
					<constructor-arg name="port" value="7006"></constructor-arg>
				</bean>				
			</set> -->
		</property>
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.cluster.maxTotal}" />
        <property name="maxIdle" value="${redis.cluster.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.cluster.maxWait}" />
        <property name="testOnBorrow" value="${redis.cluster.testOnBorrow}" />
	</bean>
	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisClusterConfiguration" />
		<constructor-arg ref="jedisPoolConfig" />
		<property name="timeout" value="${redis.cluster.timeout}" />
	</bean>
	
	<bean name="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<!-- redis 访问的模版 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
       	<property name="keySerializer" ref="stringRedisSerializer" />  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer">
        	<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>
        <property name="enableTransactionSupport" value="true" />
    </bean>
	
</beans>  